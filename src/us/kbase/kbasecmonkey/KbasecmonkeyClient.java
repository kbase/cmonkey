package us.kbase.kbasecmonkey;

import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.List;
import org.codehaus.jackson.type.TypeReference;
import us.kbase.JsonClientCaller;

/**
 * <p>Original spec-file module name: KbaseCmonkey</p>
 * <pre>
 * Module KBaseCmonkey version 1.0
 * This module provides a set of methods for work with cMonkey biclustering tool.
 * Data types summary
 * Input data types: 
 * ExpressionDataCollection represents a list of expression data sets that serve as an input of cMonkey.
 * ExpressionDataSet data type represents a single expression data set.
 * ExpressionDataPoint data type represents a relative expression value for a single gene.
 * Output data types:
 * CmonkeyRun data type represents data generated by a single run of cMonkey (run_infos table of cMonkey results)
 * CmonkeyNetwork data type represents bicluster network
 * CmonkeyCluter data type represents a single bicluster from cMonkey network, with links to genes, experimental conditions and motifs
 * MemeMotif data type definition is described in kbase_meme.spec
 * Methods summary
 * buildCmonkeyNetwork - runs cMonkey for a collection of expression data sets and returns CmonkeyRun that describes run parameters and bicluster network
 * </pre>
 */
public class KbasecmonkeyClient {
    private JsonClientCaller caller;

    public KbasecmonkeyClient(String url) throws MalformedURLException {
        caller = new JsonClientCaller(url);
    }

    /**
     * <p>Original spec-file function name: buildCmonkeyNetwork</p>
     * <pre>
     * Returns a data about bicluster network built by cMonkey algorithm
     * ExpressionDataCollection expressionDataCollection - collection of expression data sets for cMonkey run
     * CmonkeyRun cmonkeyRun - result of cMonkey run
     * </pre>
     * @param   expressionDataCollection   Original type "ExpressionDataCollection" (see {@link us.kbase.kbasecmonkey.ExpressionDataCollection ExpressionDataCollection} for details)
     * @return   Original type "CmonkeyRun" (see {@link us.kbase.kbasecmonkey.CmonkeyRun CmonkeyRun} for details)
     */
    public CmonkeyRun buildCmonkeyNetwork(ExpressionDataCollection expressionDataCollection) throws Exception {
        List<Object> args = new ArrayList<Object>();
        args.add(expressionDataCollection);
        TypeReference<List<CmonkeyRun>> retType = new TypeReference<List<CmonkeyRun>>() {};
        List<CmonkeyRun> res = caller.jsonrpcCall("KbaseCmonkey.buildCmonkeyNetwork", args, retType, true, false);
        return res.get(0);
    }
}
